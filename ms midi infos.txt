ms2
i2s master 
erzeugt timings
bclk bit clock aktiv für jedes übertragene bit 
ws_o shifted linken und rechten audio kanal
load_o ladet neues frame von 48 khz
bit counter zählt auf 128 0-127 für 1 audioframe
sw_sync(3) 3. schalter

ws low 0 bis 63 ws high 84 bis 127

shift_l an schiebe register: bclk muss auch high sein
timing: s2p musst mit bclk = 0 schieben
p2s muss mit bclk = 1 schieben 
shift AND bclk in den registern
daclrc / adclrc ist ws signal für audio codec

bclk_gen flipflop dass die clk teilt
bit counter und bclkgen können im i2s master eingebaut werden
bit count zählt nur hoch wenn bclk high
load signal anfang vom audio frame (einmal für left einmal für right)

simulation
i2s_sim : emuliert codec als sender sendet serielle signale an adcdat_s_i im richtigen timing  i2s_sim 11 22 33 44 sendet signal
i2s_chk : checkt ob richtigen seriellen daten aus i2s herauskommen i2s_chk checkt ob 11 22 33 44 empfangen wird
signal anschliessen an dacdat_check


testbench:
alle tests sollten später noch getestet werden können (regression test)

ms3: synth ?
ms4: midi
midi channel number 0000 und note on  schaltet note aus
note off: normal 8n


data 1 note 1-127 0000000

running state: status kann danach mehrere data blöcke 0xxxxxx übertragen
optional 10 dds implementieren

